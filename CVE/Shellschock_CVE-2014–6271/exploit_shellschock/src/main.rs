use clap::Parser;
use std::net::IpAddr;
use std::process;

/// Exploit the Shellshock CVE-2014â€“6271
#[derive(Parser, Debug)]
#[command(version)]
struct Args {
    /// Target IP
    #[arg(long)]
    ip: IpAddr,

    /// Command you want to execute
    #[arg(short, long)]
    command: Option<String>,

    /// Obtain Remote Control Execution
    #[arg(long, default_value_t = false)]
    rce: bool,
}

fn validate_args(args: &Args) -> Result<(), String> {
    // Verify that only one of the two parameters is provided
    if args.command.is_some() && args.rce {
        return Err(String::from("\n[!] Error: Only one of '--command' or '--rce' can be specified, not both.\n"));
    }

    // Verify that at least one of the two parameters is provided
    if args.command.is_none() && !args.rce {
        return Err(String::from("\n[!] Error: Either '--command' or '--rce' must be specified.\n"));
    }

    Ok(())
}

fn main() {
    let args = Args::parse();

    // Validating the arguments
    if let Err(e) = validate_args(&args) {
        eprintln!("{}", e);
        process::exit(1);
    }

    // Displaying the arguments
    println!("\nTarget IP: {}", args.ip);

    if let Some(command) = args.command {
        println!("Command: {}", command);
    } else if args.rce {
        println!("Remote Control Execution: {}", args.rce);
    }
}
